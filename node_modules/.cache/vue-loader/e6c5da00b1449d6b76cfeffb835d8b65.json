{"remainingRequest":"/Users/david/Desktop/polygon_challenge/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/david/Desktop/polygon_challenge/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/david/Desktop/polygon_challenge/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/david/Desktop/polygon_challenge/src/views/Home.vue?vue&type=template&id=fae5bece&","dependencies":[{"path":"/Users/david/Desktop/polygon_challenge/src/views/Home.vue","mtime":1614582712642},{"path":"/Users/david/Desktop/polygon_challenge/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/david/Desktop/polygon_challenge/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/david/Desktop/polygon_challenge/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/david/Desktop/polygon_challenge/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJlbmRlciA9IGZ1bmN0aW9uKCkgewogIHZhciBfdm0gPSB0aGlzCiAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgcmV0dXJuIF9jKAogICAgImRpdiIsCiAgICB7IHN0YXRpY0NsYXNzOiAiaG9tZSIgfSwKICAgIFsKICAgICAgX2MoIk5hdmJhciIpLAogICAgICBfYygiSGVybyIpLAogICAgICBfYygic2VjdGlvbiIsIFsKICAgICAgICBfYygKICAgICAgICAgICJkaXYiLAogICAgICAgICAgeyBzdGF0aWNDbGFzczogInRleHQtY29udGFpbmVyIiB9LAogICAgICAgICAgWwogICAgICAgICAgICBfYygiaDEiLCBbX3ZtLl92KCJPdXIgTWlzc2lvbiIpXSksCiAgICAgICAgICAgIF9jKCJwIiwgWwogICAgICAgICAgICAgIF92bS5fdigKICAgICAgICAgICAgICAgICIgUG9seWdvbiBpcyBvbiBhIG1pc3Npb24gdG8gZ2l2ZSBldmVyeSBwZXJzb24gd2l0aCBhIGxlYXJuaW5nIGRpZmZlcmVuY2UgdGhlIGZ1bGwgcmFuZ2Ugb2YgdG9vbHMgdGhleSBuZWVkIHRvIHRocml2ZSDigJQgZnJvbSBkaWFnbm9zaXMgdG8gc3VwcG9ydC4gV2UgYmVsaWV2ZSB0aGF0IGJ5IGhlbHBpbmcgcGVvcGxlIGRpc2NvdmVyIHRoZWlyIGRpZmZlcmVuY2VzLCB0aGV5IGNhbiBoYXJuZXNzIHRoZWlyIHN0cmVuZ3Rocy4gIgogICAgICAgICAgICAgICkKICAgICAgICAgICAgXSksCiAgICAgICAgICAgIF9jKCJyb3V0ZXItbGluayIsIHsgYXR0cnM6IHsgdG86ICIvc2lnbnVwIiB9IH0sIFsKICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICJkaXYiLAogICAgICAgICAgICAgICAgeyBzdGF0aWNDbGFzczogInRleHQtY2VudGVyIiB9LAogICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICAgICAidi1idG4iLAogICAgICAgICAgICAgICAgICAgIHsgYXR0cnM6IHsgcm91bmRlZDogIiIsIGNvbG9yOiAicHJpbWFyeSIsIGRhcms6ICIiIH0gfSwKICAgICAgICAgICAgICAgICAgICBbX3ZtLl92KCIgR2V0IFN0YXJ0ZWQgIildCiAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAxCiAgICAgICAgICAgICAgKQogICAgICAgICAgICBdKQogICAgICAgICAgXSwKICAgICAgICAgIDEKICAgICAgICApCiAgICAgIF0pLAogICAgICBfYygic2VjdGlvbiIsIFsKICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogInNlcnZpY2VzLXBhcmVudCBzaGFkb3ciIH0sIFsKICAgICAgICAgIF92bS5fbSgwKSwKICAgICAgICAgIF9jKAogICAgICAgICAgICAiZGl2IiwKICAgICAgICAgICAgeyBzdGF0aWNDbGFzczogInNlcnZpY2VzLWNvbnRhaW5lciBmbGV4IiB9LAogICAgICAgICAgICBfdm0uX2woX3ZtLnNlcnZpY2VzLCBmdW5jdGlvbihzZXJ2aWNlKSB7CiAgICAgICAgICAgICAgcmV0dXJuIF9jKAogICAgICAgICAgICAgICAgImRpdiIsCiAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgIGtleTogc2VydmljZS5pZCwKICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJzZXJ2aWNlLWNhcmQtY29udGFpbmVyIHRleHQtY29udGFpbmVyIgogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgX2MoImltZyIsIHsgYXR0cnM6IHsgc3JjOiBzZXJ2aWNlLmltZywgYWx0OiAiIiB9IH0pLAogICAgICAgICAgICAgICAgICBfYygiaDMiLCBbX3ZtLl92KF92bS5fcyhzZXJ2aWNlLnRpdGxlKSldKSwKICAgICAgICAgICAgICAgICAgX2MoInAiLCBbX3ZtLl92KF92bS5fcyhzZXJ2aWNlLmRlc2NyaXB0aW9uKSldKQogICAgICAgICAgICAgICAgXQogICAgICAgICAgICAgICkKICAgICAgICAgICAgfSksCiAgICAgICAgICAgIDAKICAgICAgICAgICksCiAgICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogInNlcnZpY2VzLWNvbnRhaW5lciIgfSwgWwogICAgICAgICAgICBfYygKICAgICAgICAgICAgICAiZGl2IiwKICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICBfYygiaDIiLCBbX3ZtLl92KCJXaG8ncyBpdCBmb3I/IildKSwKICAgICAgICAgICAgICAgIF9jKCJwIiwgWwogICAgICAgICAgICAgICAgICBfdm0uX3YoCiAgICAgICAgICAgICAgICAgICAgIiBBbiBhc3Nlc3NtZW50IHdpdGggYSBQb2x5Z29uIHBzeWNob2xvZ2lzdCBpcyBhcHByb3ByaWF0ZSBmb3IgYW55b25lIGFnZSA4IG9yIG9sZGVyLkFzIHNvb24gYXMgeW91IHN1c3BlY3QgYSBsZWFybmluZyBvciBhdHRlbnRpb24gZGlmZmVyZW5jZSwgeW91IHNob3VsZCBjb25zaWRlciBhbiBhc3Nlc3NtZW50LiBJbnRlcnZlbnRpb25zIGFyZSBtb3N0IHN1Y2Nlc3NmdWwgd2hlbiBsZWFybmluZyBkaWZmZXJlbmNlcyBhcmUgZGlhZ25vc2VkIGVhcmx5IGluIGxpZmUuIFN0aWxsLCBhbiBldmFsdWF0aW9uIGF0IGFueSBhZ2UgY2FuIGJlIGFuIGltcG9ydGFudCBzdGVwIHRvd2FyZCByZWNlaXZpbmcgcHJvcGVyIHN1cHBvcnQuICIKICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgXSksCiAgICAgICAgICAgICAgICBfYygicm91dGVyLWxpbmsiLCB7IGF0dHJzOiB7IHRvOiAiL3NpZ251cCIgfSB9LCBbCiAgICAgICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgICAgICJkaXYiLAogICAgICAgICAgICAgICAgICAgIHsgc3RhdGljQ2xhc3M6ICJ0ZXh0LWNlbnRlciIgfSwKICAgICAgICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICAgICAgICAgInYtYnRuIiwKICAgICAgICAgICAgICAgICAgICAgICAgeyBhdHRyczogeyByb3VuZGVkOiAiIiwgY29sb3I6ICJwcmltYXJ5IiwgZGFyazogIiIgfSB9LAogICAgICAgICAgICAgICAgICAgICAgICBbX3ZtLl92KCIgR2V0IFN0YXJ0ZWQgIildCiAgICAgICAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICAgICAxCiAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgIF0pCiAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAxCiAgICAgICAgICAgICksCiAgICAgICAgICAgIF92bS5fbSgxKQogICAgICAgICAgXSkKICAgICAgICBdKQogICAgICBdKSwKICAgICAgW192bS5fbSgyKV0sCiAgICAgIF9jKCJRdWVzdGlvbnMiKSwKICAgICAgX2MoIkZvb3RlciIpCiAgICBdLAogICAgMgogICkKfQp2YXIgc3RhdGljUmVuZGVyRm5zID0gWwogIGZ1bmN0aW9uKCkgewogICAgdmFyIF92bSA9IHRoaXMKICAgIHZhciBfaCA9IF92bS4kY3JlYXRlRWxlbWVudAogICAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgICByZXR1cm4gX2MoImRpdiIsIFtfYygiaDEiLCBbX3ZtLl92KCJPdXIgU2VydmljZXMiKV0pXSkKICB9LAogIGZ1bmN0aW9uKCkgewogICAgdmFyIF92bSA9IHRoaXMKICAgIHZhciBfaCA9IF92bS4kY3JlYXRlRWxlbWVudAogICAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgICByZXR1cm4gX2MoImRpdiIsIFsKICAgICAgX2MoImltZyIsIHsKICAgICAgICBhdHRyczogeyBzcmM6IHJlcXVpcmUoIi4uL2Fzc2V0cy9pbWFnZXMvc3VwZXIuc3ZnIiksIGFsdDogIiIgfQogICAgICB9KQogICAgXSkKICB9LAogIGZ1bmN0aW9uKCkgewogICAgdmFyIF92bSA9IHRoaXMKICAgIHZhciBfaCA9IF92bS4kY3JlYXRlRWxlbWVudAogICAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgICByZXR1cm4gX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJyZXZpZXdzLWNvbnRhaW5lciIgfSwgWwogICAgICBfYygiZGl2IiwgWwogICAgICAgIF9jKCJwIiwgWwogICAgICAgICAgX3ZtLl92KCcgIicpLAogICAgICAgICAgX2MoInN0cm9uZyIsIFtfdm0uX3YoIk15IGRpYWdub3NpcyBjaGFuZ2VkIG15IGxpZmUuIildKSwKICAgICAgICAgIF92bS5fdigKICAgICAgICAgICAgJyBGb3IgdGhlIGZpcnN0IHRpbWUsIEkgd2FzIGluIGNvbnRyb2wuIEkgdW5kZXJzdG9vZCB3aHkgSSBmZWx0IGRpZmZlcmVudCBhbmQgaG93IHRvIHRhaWxvciBteSBlZHVjYXRpb24gdG8gbXkgbmVlZHMuIiAnCiAgICAgICAgICApCiAgICAgICAgXSkKICAgICAgXSksCiAgICAgIF9jKCJkaXYiLCBbCiAgICAgICAgX2MoImltZyIsIHsKICAgICAgICAgIHN0YXRpY0NsYXNzOiAic2hhZG93IiwKICAgICAgICAgIGF0dHJzOiB7IHNyYzogcmVxdWlyZSgiLi4vYXNzZXRzL2ltYWdlcy9oZWFkc2hvdF8wLnBuZyIpLCBhbHQ6ICIiIH0KICAgICAgICB9KQogICAgICBdKQogICAgXSkKICB9Cl0KcmVuZGVyLl93aXRoU3RyaXBwZWQgPSB0cnVlCgpleHBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucyB9"}]}